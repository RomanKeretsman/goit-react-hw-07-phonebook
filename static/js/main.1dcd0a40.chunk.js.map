{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-selectors.js","redux/store.js","components/Container/Container.jsx","components/Logo/Logo.jsx","components/AddContactButton/AddContactButton.jsx","components/ContactForm/ContactForm.jsx","components/ContactForm/ContactForm.container.jsx","components/Filter/Filter.jsx","components/Filter/Filter.container.jsx","components/IconButton/IconButton.jsx","assets/images/delete.svg","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.container.jsx","components/Loader/Loader.jsx","App.jsx","index.js","components/ContactForm/ContactForm.module.scss","components/Filter/Filter.module.scss","components/ContactItem/ContactItem.module.scss","components/Logo/Logo.module.scss","components/AddContactButton/AddContactButton.module.scss","components/Container/Container.module.scss","components/IconButton/IconButton.module.scss","components/ContactList/slide.module.scss","components/ContactList/ContactList.module.scss","components/Loader/Loader.module.scss"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","a","actions","get","data","toast","error","message","name","number","contact","post","id","delete","items","createReducer","_","payload","sort","b","localeCompare","state","filter","loading","combineReducers","getContacts","contacts","getFilter","getLoading","getError","getfilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","Container","children","className","styles","container","defaultProps","Logo","itemRef","createRef","CSSTransition","in","appear","timeout","classNames","nodeRef","title","ref","AddContactButton","button__wrapper","type","button","initialState","ContactForm","onSubmit","useState","setState","hanldeChange","event","currentTarget","value","prev","resetForm","form","preventDefault","normalizedName","nameInContacts","find","numberInContacts","info","label","label__text","placeholder","aria-label","input","onChange","pattern","required","connect","contactsSelectors","contactsOperations","Filter","contactsActions","IconButton","onClick","allyProps","_path","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDelete","_ref","svgRef","titleId","props","xmlns","viewBox","d","ForwardRef","ContactItem","onDeleteContact","item","href","width","height","fill","ContactList","TransitionGroup","component","list","map","slideTransition","Loader","loader","color","App","isLoadingContacts","useSelector","isError","useDispatch","useEffect","Alert","severity","autoClose","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1dcd0a40.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit'; // Импорт функции создания экшена из тулкита\n\n// Создание экшенов для получаения списка контактов\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\n// Создание экшенов для добавления контакта\nconst addContactRequest = createAction('contacts/addContactsRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\n// Создание экшенов для удаления контакта\nconst deleteContactRequest = createAction('contacts/deleteContactsRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\n// Создание экшена для фильтра\nconst changeFilter = createAction('contacts/change-filter');\n\nexport default {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n\n  changeFilter,\n};\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nimport actions from './contacts-actions'; // Импорт экшенов из контактов в операции\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\n// Асинхронная операция получения списка контактов (делает запрос, диспатчит экшн получения)\nconst fetchContacts = () => async dispatch => {\n  dispatch(actions.fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(actions.fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(actions.fetchContactsError(error));\n    toast.error(error.message);\n  }\n};\n\n// Асинхронная операция по добавлению контакта (принимает данные с формы, делает запрос, диспатчит экшн добавления)\nconst addContact = (name, number) => async dispatch => {\n  const contact = { name, number };\n\n  dispatch(actions.addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n\n    dispatch(actions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.addContactError(error));\n    toast.error(error.message);\n  }\n};\n\n// Асинхронная операция удаления контакта (принимает id, делает запрос, диспатчит экшн удаления)\nconst deleteContact = id => async dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n\n    dispatch(actions.deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(actions.deleteContactError(error));\n    toast.error(error.message);\n  }\n};\n\nexport default { fetchContacts, addContact, deleteContact };\n","import { combineReducers } from 'redux'; // Импорт функции комбайна редюсеров\nimport { createReducer } from '@reduxjs/toolkit'; // Импорт функции создания редюсера\n\nimport actions from './contacts-actions'; // Импорт экшенов из контактов в редюсеры\n\n// Создание редюсера для массива items в контактах (фетч всех контактов, добавление и удаление контакта)\nconst items = createReducer([], {\n  [actions.fetchContactsSuccess]: (_, { payload }) =>\n    payload.sort((a, b) => a.name.localeCompare(b.name)),\n  [actions.addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [actions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\n// Создание редюсера для фильтра в контактах\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\n// Создание редюсера индикации загрузки\nconst loading = createReducer(false, {\n  [actions.fetchContactsRequest]: () => true,\n  [actions.fetchContactsSuccess]: () => false,\n  [actions.fetchContactsError]: () => false,\n\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: () => false,\n\n  [actions.deleteContactRequest]: () => true,\n  [actions.deleteContactSuccess]: () => false,\n  [actions.deleteContactError]: () => false,\n});\n\n// Создание редюсера обработки ошибок\nconst error = createReducer(null, {\n  [actions.fetchContactsError]: (_, { payload }) => payload,\n  [actions.addContactError]: (_, { payload }) => payload,\n  [actions.deleteContactError]: (_, { payload }) => payload,\n\n  [actions.fetchContactsRequest]: () => null,\n  [actions.fetchContactsSuccess]: () => null,\n\n  [actions.addContactRequest]: () => null,\n  [actions.addContactSuccess]: () => null,\n\n  [actions.deleteContactRequest]: () => null,\n  [actions.deleteContactSuccess]: () => null,\n});\n\n// Экспорт всех редюсеров через комбайн\nexport default combineReducers({ items, filter, loading, error });\n","import { createSelector } from '@reduxjs/toolkit'; // Импорт функции для мемоизации селектора\n\nconst getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\nconst getLoading = state => state.contacts.loading;\nconst getError = state => state.contacts.error;\n\n// Мемоизация функции фильтра контактов\nconst getfilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport default {\n  getContacts,\n  getFilter,\n  getLoading,\n  getError,\n  getfilteredContacts,\n};\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'; // Импорт функции создания хранилища и прослойки\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'; // Импорт функции персистеров и фикса консоли\nimport logger from 'redux-logger'; // Импорт функции логгирования\n\nimport { contactsReducer } from './contacts'; // Импорт редюсера по контактам\n\n// Создание прослоек + логгер. Важен порядок!\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// Создание хранилища (корневой редюсер + прослойки + тулзы только для разработки)\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import PropTypes from 'prop-types';\nimport styles from './Container.module.scss';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React, { createRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport styles from './Logo.module.scss';\n\nconst Logo = () => {\n  const itemRef = createRef(null);\n\n  return (\n    <CSSTransition\n      in={true}\n      appear={true}\n      timeout={800}\n      classNames={styles}\n      nodeRef={itemRef}\n    >\n      <h1 className={styles.title} ref={itemRef}>\n        PhoneBook\n      </h1>\n    </CSSTransition>\n  );\n};\n\nexport default Logo;\n","import styles from './AddContactButton.module.scss';\n\nconst AddContactButton = () => (\n  <div className={styles.button__wrapper}>\n    <button type=\"submit\" className={styles.button}>\n      Add contact\n    </button>\n  </div>\n);\n\nexport default AddContactButton;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nimport AddContactButton from '../AddContactButton';\n\nimport styles from './ContactForm.module.scss';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = ({ contacts, onSubmit }) => {\n  const [state, setState] = useState(initialState);\n  const { name, number } = state;\n\n  // Следит за инпутом\n  const hanldeChange = event => {\n    const { name, value } = event.currentTarget;\n\n    setState(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Метод на отправке формы. Формирует из стейта контакт и передает во внешний метод\n  const hanldeSubmit = event => {\n    event.preventDefault();\n\n    const normalizedName = name.toLowerCase();\n\n    // Проверка на дубликат по имени\n    const nameInContacts = contacts.find(\n      contact => contact.name === normalizedName,\n    );\n\n    // Проверка на дубликат по номеру\n    const numberInContacts = contacts.find(\n      contact => contact.number === number,\n    );\n\n    // Отправка имени и номера после проверки (в проп-метод из контейнера)\n    if (!nameInContacts && !numberInContacts) {\n      onSubmit(normalizedName, number);\n      resetForm();\n      return;\n    }\n\n    toast.info(`${name} is already in contacts`);\n  };\n\n  // Сброс полей формы (после отправки)\n  const resetForm = () => {\n    setState(initialState);\n  };\n\n  return (\n    <form className={styles.form} onSubmit={hanldeSubmit}>\n      <label className={styles.label}>\n        <span className={styles.label__text}>Name</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Contact name\"\n          aria-label=\"Input for your name\"\n          className={styles.input}\n          value={name} // Пишет значение в локальный стейт\n          onChange={hanldeChange} // Наблюдающий метод\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={styles.label}>\n        <span className={styles.label__text}>Number</span>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Phone number\"\n          aria-label=\"Input for your phone number\"\n          className={styles.input}\n          value={number} // Пишет значение в локальный стейт\n          onChange={hanldeChange} // Наблюдающий метод\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <AddContactButton />\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { connect } from 'react-redux'; // Импорт функции коннекта к хранилищу\n\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts'; // Импорт операции добавления контакта и селектора всех контактов\n\nimport ContactForm from './ContactForm'; // Импорт компонента формы для обёртки в коннекте\n\n// Из глобального стейта в пропы компонента ContactForm\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getContacts(state),\n});\n\n// Из глобального стейта в пропы компонента ContactForm - методы\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\n\nimport styles from './Filter.module.scss';\n\n// Принимает значение с поля фильтра и метод пишущий в стейт\nconst Filter = ({ value, onChange }) => (\n  <div className={styles.filter}>\n    <h2 className={styles.title}>Contacts</h2>\n\n    <label className={styles.label}>\n      <span className={styles.label__text}>Find contacts by name</span>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Find\"\n        className={styles.input}\n        value={value}\n        onChange={onChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  </div>\n);\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\n\nimport { contactsSelectors, contactsActions } from '../../redux/contacts';\n\nimport Filter from './Filter';\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event =>\n    dispatch(contactsActions.changeFilter(event.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\n\nimport styles from './IconButton.module.scss';\n\nconst IconButton = ({ children, onClick, ...allyProps }) => (\n  <button\n    type=\"button\"\n    className={styles.IconButton}\n    onClick={onClick}\n    {...allyProps}\n  >\n    {children}\n  </button>\n);\n\nIconButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\n\nIconButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string.isRequired,\n};\n\nexport default IconButton;\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 41.756 41.756\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.948 20.878L40.291 8.536a5 5 0 10-7.07-7.071L20.878 13.809 8.535 1.465a5 5 0 00-7.07 7.071l12.342 12.342L1.465 33.22a5 5 0 107.07 7.071l12.343-12.342 12.343 12.343c.976.977 2.256 1.464 3.535 1.464s2.56-.487 3.535-1.464a5 5 0 000-7.071L27.948 20.878z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.d02651e3.svg\";\nexport { ForwardRef as ReactComponent };","import IconButton from '../IconButton';\nimport { ReactComponent as DeleteIcon } from '../../assets/images/delete.svg';\n\nimport styles from './ContactItem.module.scss';\n\n// Принимает один контакт и метод для удаления контакта\nconst ContactItem = ({ contact, onDeleteContact }) => {\n  return (\n    <li className={styles.item}>\n      <span className={styles.name}>{contact.name}</span>\n      <a href={`tel:${contact.number}`} className={styles.number}>\n        {contact.number}\n      </a>\n\n      <IconButton onClick={onDeleteContact} aria-label=\"Delete contact\">\n        <DeleteIcon width=\"20px\" height=\"20px\" fill=\"#a7a1a1\" />\n      </IconButton>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport ContactItem from '../ContactItem';\nimport slideTransition from './slide.module.scss';\nimport styles from './ContactList.module.scss';\n\n// Принимает все контакты и пробрасывает дальше метод для удаления контакта\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={styles.list}>\n      {contacts.map(contact => (\n        <CSSTransition\n          key={contact.id}\n          timeout={500}\n          classNames={slideTransition}\n        >\n          <ContactItem\n            key={contact.id}\n            contact={contact}\n            onDeleteContact={() => onDeleteContact(contact.id)}\n          />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux'; // Импортирует коннект для глобального хранилища\n\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts'; // Импорт async операции удаления контакта и селектора всех контактов\n\nimport ContactList from './ContactList'; // Импорт компонента списка контактов для обёртки в коннекте\n\n// Из стейта в пропы компонента ContactList - после фильтрации в селекторах\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getfilteredContacts(state),\n});\n\n// Из стейта в пропы компонента ContactList - метод удаления контакта\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import Template from 'react-loader-spinner';\n\nimport styles from './Loader.module.scss';\n\nconst Loader = () => {\n  return (\n    <div className={styles.loader}>\n      <Template\n        type=\"BallTriangle\"\n        color=\"#4ddb78d5\"\n        height={100}\n        width={100}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { ToastContainer } from 'react-toastify';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { contactsOperations, contactsSelectors } from './redux/contacts'; // Импорт async операции запроса всех контактов и селектора лоадера и ошибки\n\nimport Container from './components/Container';\nimport Logo from './components/Logo';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport Loader from './components/Loader';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst App = () => {\n  const isLoadingContacts = useSelector(state =>\n    contactsSelectors.getLoading(state),\n  );\n  const isError = useSelector(state => contactsSelectors.getError(state));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Logo />\n\n      <ContactForm />\n\n      <Filter />\n\n      <ContactList />\n\n      {isLoadingContacts && <Loader />}\n\n      {isError && <Alert severity=\"error\">{isError.message}</Alert>}\n\n      <ToastContainer autoClose={2500} />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux'; // Импорт провайдера для хранилища\nimport store from './redux/store'; // Импорт обьекта из стора (хранилище)\n\nimport App from './App.jsx';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './App.module.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3yUml\",\"label\":\"ContactForm_label__3MPq3\",\"input\":\"ContactForm_input__2WzgY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__3jA7u\",\"label\":\"Filter_label__KCzBZ\",\"input\":\"Filter_input__W5LLO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__2_jYz\",\"name\":\"ContactItem_name__shdpA\",\"number\":\"ContactItem_number__RjfeI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Logo_title__rqAKT\",\"appear\":\"Logo_appear__2RgJi\",\"appearActive\":\"Logo_appearActive__WPXst\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button__wrapper\":\"AddContactButton_button__wrapper__dopBq\",\"button\":\"AddContactButton_button__234Tu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2xY7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconButton\":\"IconButton_IconButton___ekoa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__2YZ3z\",\"enterActive\":\"slide_enterActive__1dKIG\",\"exit\":\"slide_exit__38JNv\",\"exitActive\":\"slide_exitActive__PDamD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1SRui\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2-8NJ\"};"],"sourceRoot":""}